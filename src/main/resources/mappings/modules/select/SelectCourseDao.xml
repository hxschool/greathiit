<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.select.dao.SelectCourseDao">
    
	<sql id="selectCourseColumns">
		a.id AS "id",
		a.course_id AS "courseId",
		
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		c.id as "course.id",
		c.curs_num as "course.cursNum",
		c.curs_name as "course.cursName",
		s.student_number as "student.studentNumber",
		s.name as "student.name",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="selectCourseJoins">
		LEFT JOIN course c on a.course_id=c.id
		LEFT JOIN student s on a.student_number=s.student_number
	</sql>
    
	<select id="get" resultType="SelectCourse">
		SELECT 
			<include refid="selectCourseColumns"/>
		FROM select_course a
		<include refid="selectCourseJoins"/>
		WHERE 
		1=1
		<if test="id != null" >
        and a.id = #{id}
      	</if>
		<if test="course != null and course.id!=null and course.id!=''" >
        and a.course_id = #{course.id}
      	</if>
      	
      	<if test="student != null and student.studentNumber!=null and student.studentNumber!=''" >
        and s.student_number = #{student.studentNumber}
      	</if>
	</select>
	
	<select id="count" resultType="java.lang.Integer">
		SELECT 
			count(1)
		FROM select_course a
		<include refid="selectCourseJoins"/>
		WHERE 
		1=1
		
		<if test="course != null and course.id!=null and course.id!=''" >
        and a.course_id = #{course.id}
      	</if>
      	<if test="student != null and student.studentNumber!=null and student.studentNumber!=''" >
       	and a.student_number = #{student.studentNumber}
      	</if>
	</select>
	
	<select id="findList" resultType="SelectCourse">
		SELECT 
			<include refid="selectCourseColumns"/>
		FROM select_course a
		<include refid="selectCourseJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			
			
			<if test="courses != null and courses.size()>0" >
			and a.course_id  IN
					<foreach collection="courses" item="c" index="index" open="(" close=")" separator=",">
	  					#{c.id}
					</foreach>
			</if>
		<if test="course != null and course.id!=null and course.id!=''" >
        	and a.course_id = #{course.id}
      	</if>
      	
      		<if test="course != null and course.cursYearTerm!=null and course.cursYearTerm!=''" >
        	and c.curs_year_term = #{course.cursYearTerm}
      	</if>
      	
      	<if test="course != null and course.teacher!=null and course.teacher.teacherNumber!=''" >
        	and c.teacher_number = #{course.teacher.teacherNumber}
      	</if>
      	
      	<if test="student != null and student.studentNumber!=null and student.studentNumber!=''" >
       	and s.student_number = #{student.studentNumber}
      	</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="SelectCourse">
		SELECT 
			<include refid="selectCourseColumns"/>
		FROM select_course a
		<include refid="selectCourseJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>


	<select id="exportSelectCourse"
	resultType="com.thinkgem.jeesite.modules.course.web.excel.CourseSelectExcel"
	parameterType="com.thinkgem.jeesite.modules.course.web.excel.CourseSelectExcel">

	select
	@rownum := @rownum + 1 AS id,
	c.id AS "course.id",
	c.curs_num AS "course.cursNum",
	c.curs_edu_num AS "course.cursEduNum",
	c.curs_name AS "course.cursName",
	dept.id AS "dept.id",
	dept.name AS "dept.name",
	major.id AS "major.id",
	major.name AS "major.name",
	cla.id AS "cla.id",
	cla.name AS "cla.name",
	b.no as "user.no",
	b.login_name as "user.loginName",
	b.phone as "user.phone",
	b.name as "user.name"
	from ( SELECT @rownum := 0 ) r, select_course a
	LEFT JOIN sys_user b on a.student_number=b.no
	LEFT JOIN sys_office dept on b.company_id=dept.id
	LEFT JOIN sys_office major on b.office_id=major.id
	LEFT JOIN sys_office cla on b.clazz_id=cla.id
	LEFT JOIN course c on a.course_id=c.id
	LEFT JOIN student_course sc on sc.course_id=c.id
	<where>
		a.del_flag = 0
		<if test="courses != null and courses.size()>0" >
			and c.id  IN
					<foreach collection="courses" item="c" index="index" open="(" close=")" separator=",">
	  					#{c.id}
					</foreach>
			</if>
		<if test="course!=null and course.id!=null and course.id!=''">
			AND c.id=#{course.id}
		</if>
		
		<if test="course!=null and course.teacher!=null and course.teacher.teacherNumber!=''">
			AND c.teacher_number=#{course.teacher.teacherNumber}
		</if>
	
		<if test="dept!=null and dept.id!=null and dept.id!=''">
			AND dept.id=#{dept.id}
		</if>
		<if test="major!=null and major.id!=null and major.id!=''">
			AND major.id=#{major.id}
		</if>
			<if test="cla!=null and cla.id!=null and cla.id!=''">
			AND cla.id=#{cla.id}
		</if>

		<if test="user!=null and user.name!=null and user.no!=''">
			AND b.name=#{user.no}
		</if>
		<if test="user!=null and user.phone!=null and user.phone!=''">
			AND b.phone=#{user.phone}
		</if>
		<if test="course!=null and course.cursYearTerm!=null and course.cursYearTerm!=''">
			AND c.curs_year_term=#{course.cursYearTerm}
		</if>
		
	</where>
</select>
	
	<insert id="insert">
		INSERT INTO select_course(
			id,
			course_id,
			student_number,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{course.id},
			#{student.studentNumber},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE select_course SET 	
			course_id = #{course.id},
			student_number = #{student.studentNumber},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		delete from select_course 
		WHERE id = #{id}
	</update>
	
	<select id="totalSelectCourse" resultType="map">
		select count(a.course_id) as TOTAL,b.curs_name as NAME from select_course a left join course b on a.course_id=b.id where year(a.create_date)= year(now()) group by a.course_id having(count(a.course_id))>60
	</select>
</mapper>