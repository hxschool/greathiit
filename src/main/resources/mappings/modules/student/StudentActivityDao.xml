<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.student.dao.StudentActivityDao">
    
	<sql id="studentActivityColumns">
		a.id AS "id",
		a.act_name AS "actName",
		a.act_time AS "actTime",
		a.act_duty AS "actDuty",
		a.act_state AS "actState",
		a.act_type AS "actType",
		a.act_unit AS "actUnit",
		a.student_number AS "student.no",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="studentActivityJoins">
	</sql>
    
	<select id="get" resultType="StudentActivity">
		SELECT 
			<include refid="studentActivityColumns"/>
		FROM student_activity a
		<include refid="studentActivityJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="StudentActivity">
		SELECT 
			<include refid="studentActivityColumns"/>
		FROM student_activity a
		<include refid="studentActivityJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	
	
	
	<select id="getStudentActivitysByType" resultType="StudentActivity">
		SELECT 
			<include refid="studentActivityColumns"/>
		FROM student_activity a
		<include refid="studentActivityJoins"/>
		<where>
			a.del_flag = 0 and a.student_number=#{studentNumber} and a.act_type=#{actType}
		</where>		
		
	</select>
	
	<select id="findAllList" resultType="StudentActivity">
		SELECT 
			<include refid="studentActivityColumns"/>
		FROM student_activity a
		<include refid="studentActivityJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO student_activity(
			id,
			act_name,
			act_time,
			act_duty,
			act_state,
			act_type,
			act_unit,
			student_number,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{actName},
			#{actTime},
			#{actDuty},
			#{actState},
			#{actType},
			#{actUnit},
			#{student.no},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE student_activity SET 	
			act_name = #{actName},
			act_time = #{actTime},
			act_duty = #{actDuty},
			act_state = #{actState},
			act_type = #{actType},
			act_unit = #{actUnit},
			student_number = #{student.no},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE student_activity SET 
			del_flag = #{DEL_FLAG_DELETE} 
			
		WHERE id = #{id}
		<if test="student.no !=null and student.no!='' ">
			and student_number  = #{student.no}
		</if>
	</update>
	
</mapper>