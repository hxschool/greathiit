<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.student.dao.StudentDao">
    
	<sql id="studentColumns">
		a.exa_number AS "exaNumber",
		a.xy AS "xy",
		a.zy AS "zy",
		a.year AS "year",
		a.id AS "id",
		a.name AS "name",
		a.id_card AS "idCard",
		a.birthday AS "birthday",
		a.gender AS "gender",
		a.nation AS "nation",
		a.political AS "political",
		a.phone AS "phone",
		a.address AS "address",
		a.mail AS "mail",
		a.long_goal AS "longGoal",
		a.mid_goal AS "midGoal",
		a.short_goal AS "shortGoal",
		a.self_eng_introduce AS "selfEngIntroduce",
		a.self_introduce AS "selfIntroduce",
		a.edu AS "edu",
		a.native_place AS "nativePlace",
		a.student_length AS "studentLength",
		a.father_name AS  "fatherName",
		a.father_works AS  "fatherWorks",
		a.father_phone AS  "fatherPhone",
		a.mother_name AS  "motherName",
		a.mother_works AS  "motherWorks",
		a.mother_phone AS  "motherPhone",
		a.qq AS  "qq",
		a.wechat AS  "wechat",
		a.face AS  "face",
		a.start_date AS  "startDate",		
		a.over_date AS  "overDate",	
		a.student_number AS "studentNumber",
		a.dorm_number as "dormNumber",
		a.location      as "location",
		a.master      as "master",
		a.instructor  as "instructor",
		a.status AS "status",
		a.description as "description",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		cl.id as "clazz.id",
		cl.name as "clazz.name"
	</sql>
	
	<sql id="studentJoins">
		LEFT JOIN sys_office cl ON cl.id = a.clazz_id 
	</sql>
    
	<select id="get" resultType="Student">
		SELECT 
			<include refid="studentColumns"/>
		FROM student a
		<include refid="studentJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="getStudentByStudentNumber" resultType="Student">
		SELECT 
			<include refid="studentColumns"/>
		FROM student a
		<include refid="studentJoins"/>
		WHERE a.del_flag = 0 and a.student_number = #{studentNumber}
	</select>
	
		
	<select id="getStudentByIdCard" resultType="Student">
		SELECT 
			<include refid="studentColumns"/>
		FROM student a
		<include refid="studentJoins"/>
		WHERE a.del_flag = 0 and a.id_card = #{idCard}
	</select>
	
	
	
	<select id="tracked" resultType="Student">
		SELECT 
			<include refid="studentColumns"/>
		FROM student a
		<include refid="studentJoins"/>
		<where>
			a.del_flag = 0
			<if test="isClass==0">
				and ( a.clazz_id is null or a.clazz_id ='')
			</if>
			
			<if test="classno != null and classno != ''">
				AND a.clazz_id = #{classno}
			</if>
			<if test="name != null and name != ''">
				AND a.name = #{name}
			</if>
			<if test="idCard != null and idCard != ''">
				AND a.id_card = #{idCard}
			</if>
			
			<if test="studentLength != null and studentLength != ''">
				AND a.student_length = #{studentLength}
			</if>
			
			<if test="edu != null and edu != ''">
				AND a.edu = #{edu}
			</if>
			
			<if test="exaNumber != null and exaNumber != ''">
				AND a.exa_number = #{exaNumber}
			</if>
			
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
			

		</where>
		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="complete" resultType="Student">
		SELECT 
			<include refid="studentColumns"/>
		FROM student a
		<include refid="studentJoins"/>
		<where>
			a.del_flag = 0
			and a.status=10
			<if test="classno != null and classno != ''">
				AND a.clazz_id = #{classno}
			</if>
			<if test="name != null and name != ''">
				AND a.name = #{name}
			</if>
			<if test="idCard != null and idCard != ''">
				AND a.id_card = #{idCard}
			</if>
			
			<if test="studentLength != null and studentLength != ''">
				AND a.student_length = #{studentLength}
			</if>
			
			<if test="edu != null and edu != ''">
				AND a.edu = #{edu}
			</if>
			
			<if test="exaNumber != null and exaNumber != ''">
				AND a.exa_number = #{exaNumber}
			</if>

		</where>
		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	
	
	<select id="findList" resultType="Student">
		SELECT 
			<include refid="studentColumns"/>
		FROM student a
		<include refid="studentJoins"/>
		<where>
			a.del_flag = 0
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="exaNumber != null and exaNumber != ''">
				AND a.exa_number=#{exaNumber}
			</if>
			
				<if test="edu != null and edu != ''">
				AND a.edu=#{edu}
			</if>
			
			<if test="studentLength != null and studentLength != ''">
				AND a.student_length=#{studentLength}
			</if>
			
			<if test="studentNumber != null and studentNumber != ''">
				AND a.student_number=#{studentNumber}
			</if>
			
			<if test="idCard != null and idCard != ''">
				AND a.id_card=#{idCard}
			</if>
			
			<if test="clazz != null and clazz.id!=null ">
				and a.clazz_id = #{clazz.id}
			</if>
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
			
			<if test="year != null and year != ''">
				
				and year=#{year}
			</if>
			
			<if test="clazzNumbers != null and clazzNumbers.size>0 ">
				
				and a.clazz_id IN 
				<foreach item="st" collection="clazzNumbers" index="idx" open="(" separator="," close=")">
					#{st}
				</foreach>
			</if>
			
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Student">
		SELECT 
			<include refid="studentColumns"/>
		FROM student a
		<include refid="studentJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="clazz != null and clazz.id!=null and clazz.id!=''">
				and cl.id=#{clazz.id}
			</if>
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO student(
			id,
			exa_number,
			location,
			xy,
			zy,
			year,
			clazz_id,
			start_date,		
			over_date,	
			name,
			id_card,
			birthday,
			gender,
			nation,
			political,
			phone,
			address,
			mail,
			long_goal,
			mid_goal,
			short_goal,
			self_eng_introduce,
			self_introduce,
			edu,
			native_place,
			student_length,
			father_name,
			father_works,
			father_phone,
			mother_name,
			mother_works,
			mother_phone,
			qq,
			wechat,
			student_number,
			dorm_number,
			master,
			instructor,
			status,
			description,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{exaNumber},
			#{location},
			#{xy},
			#{zy},
			#{year},
			#{clazz.id},
			#{startDate},		
			#{overDate},	
			#{name},
			#{idCard},
			#{birthday},
			#{gender},
			#{nation},
			#{political},
			#{phone},
			#{address},
			#{mail},
			#{longGoal},
			#{midGoal},
			#{shortGoal},
			#{selfEngIntroduce},
			#{selfIntroduce},
			#{edu},
			#{nativePlace},
			#{studentLength},
			#{fatherName},
			#{fatherWorks},
			#{fatherPhone},
			#{motherName},
			#{motherWorks},
			#{motherPhone},
			#{qq},
			#{wechat},
			#{studentNumber},
			#{dormNumber},
			#{master},
			#{instructor},
			#{status},
			#{description},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE student SET 	
			exa_number = #{exaNumber},
			xy = #{xy},
			zy = #{zy},
			year = #{year},
			location = #{location},
			father_name =#{fatherName},
			father_works =#{fatherWorks},
			father_phone =#{fatherPhone},
			mother_name =#{motherName},
			mother_works =#{motherWorks},
			mother_phone =#{motherPhone},
			qq =#{qq},
			wechat =#{wechat},
			face =#{face},
			start_date =#{startDate},		
			over_date =#{overDate},	
			clazz_id = #{clazz.id},
			name = #{name},
			id_card = #{idCard},
			birthday = #{birthday},
			gender = #{gender},
			nation = #{nation},
			political = #{political},
			phone = #{phone},
			address = #{address},
			mail = #{mail},
			long_goal = #{longGoal},
			mid_goal = #{midGoal},
			short_goal = #{shortGoal},
			self_eng_introduce = #{selfEngIntroduce},
			self_introduce = #{selfIntroduce},
			edu = #{edu},
			native_place = #{nativePlace},
			student_length = #{studentLength},
			student_number = #{studentNumber},
			dorm_number = #{dormNumber},
			master=#{master},
			instructor=#{instructor},
			status = #{status},
			description = #{description},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE student SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>