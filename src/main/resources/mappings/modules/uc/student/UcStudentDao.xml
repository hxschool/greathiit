<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.uc.student.dao.UcStudentDao">
    
	<sql id="ucStudentColumns">
		a.id AS "id",
		a.exa_number AS "exaNumber",
		a.location AS "location",
		a.student_number AS "studentNumber",
		a.username AS "username",
		a.gender AS "gender",
		a.birthday AS "birthday",
		a.id_card AS "idCard",
		a.political AS "political",
		a.nation AS "nation",
		a.department_code AS "departmentCode",
		a.department_id AS "departmentId",
		a.department_name AS "departmentName",
		a.major_code AS "majorCode",
		a.major_id AS "majorId",
		a.major_name AS "majorName",
		a.class_number AS "classNumber",
		a.edu AS "edu",
		a.school_system AS "schoolSystem",
		a.learning AS "learning",
		a.start_date AS "startDate",
		a.current_level AS "currentLevel",
		a.over_date AS "overDate",
		a.status AS "status",
		a.description as "description",
		a.region_code AS "regionCode",
		a.region_name AS "regionName",
		a.exa_category AS "exaCategory",
		a.hokou_address AS "hokouAddress",
		a.home_address AS "homeAddress",
		a.zip_code AS "zipCode",
		a.addressee AS "addressee",
		a.notice_number AS "noticeNumber",
		a.phone AS "phone",
		a.is_change AS "isChange",
		a.yuwen AS "yuwen",
		a.shuxue AS "shuxue",
		a.waiyu AS "waiyu",
		a.zonghe AS "zonghe",
		a.zongfen AS "zongfen",
		a.techang AS "techang",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="ucStudentJoins">
	</sql>
	
	<select id="findNumberByUsernameAndIdCard" resultType="string">
		SELECT
		a.student_number AS "studentNumber"
		FROM uc_student a
		WHERE a.username=#{username} and a.id_card=#{idCard}
	</select>
	
	<select id="findBystudentNumber" resultType="UcStudent">
		SELECT
		<include refid="ucStudentColumns"/>
		FROM uc_student a
		WHERE  a.student_number=#{studentNumber}
	</select>
	
		<select id="findByIdCard" resultType="UcStudent">
		SELECT
		<include refid="ucStudentColumns"/>
		FROM uc_student a
		WHERE  a.id_card=#{idCard}
	</select>
	
	
	<select id="findNumberByUsernameAndIdCardAndNumber" resultType="UcStudent">
		SELECT
		<include refid="ucStudentColumns"/>
		FROM uc_student a
		WHERE a.username=#{username} and a.id_card=#{idCard} and a.student_number=#{number}
	</select>
	
	
    
	<select id="get" resultType="UcStudent">
		SELECT 
			<include refid="ucStudentColumns"/>
		FROM uc_student a
		<include refid="ucStudentJoins"/>
		WHERE a.id = #{id}
	</select>
	
	
	<select id="exportList" resultType="UcStudent">
		SELECT 
			<include refid="ucStudentColumns"/>
		FROM uc_student a
		<include refid="ucStudentJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
	
			<if test="departmentId != null and departmentId != ''">
			and a.department_id=#{departmentId}
			</if>
			<if test="majorId != null and majorId != ''">
			and a.major_id=#{majorId}
			</if>
			<if test="classNumber != null and classNumber != ''">
			and a.class_number=#{classNumber}
			</if>
		</where>
	</select>
	
	
	<select id="biyesheng" resultType="UcStudent">
		SELECT 
			<include refid="ucStudentColumns"/>
		FROM uc_student a
		<include refid="ucStudentJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_DELETE}
			<if test="studentNumber != null and studentNumber != ''">
				AND a.student_number = #{studentNumber}
			</if>
			<if test="username != null and username != ''">
				AND a.username = #{username}
			</if>
			<if test="idCard != null and idCard != ''">
				AND a.id_card = #{idCard}
			</if>
			
			<if test="schoolSystem != null and schoolSystem != ''">
				AND a.school_system = #{schoolSystem}
			</if>
			
			<if test="edu != null and edu != ''">
				AND a.edu = #{edu}
			</if>
			
			<if test="exaNumber != null and exaNumber != ''">
				AND a.exa_number = #{exaNumber}
			</if>
			
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
			
			<if test="currentLevel != null and currentLevel != ''">
				AND a.current_level = #{currentLevel}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	
	<select id="findList" resultType="UcStudent">
		SELECT 
			<include refid="ucStudentColumns"/>
		FROM uc_student a
		<include refid="ucStudentJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="studentNumber != null and studentNumber != ''">
				AND a.student_number = #{studentNumber}
			</if>
			<if test="username != null and username != ''">
				AND a.username = #{username}
			</if>
			<if test="idCard != null and idCard != ''">
				AND a.id_card = #{idCard}
			</if>
			
			<if test="schoolSystem != null and schoolSystem != ''">
				AND a.school_system = #{schoolSystem}
			</if>
			
			<if test="edu != null and edu != ''">
				AND a.edu = #{edu}
			</if>
			
			<if test="exaNumber != null and exaNumber != ''">
				AND a.exa_number = #{exaNumber}
			</if>
			
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
			
			<if test="currentLevel != null and currentLevel != ''">
				AND a.current_level = #{currentLevel}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="UcStudent">
		SELECT 
			<include refid="ucStudentColumns"/>
		FROM uc_student a
		<include refid="ucStudentJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO uc_student(
			id,
			exa_number,
			location,
			student_number,
			username,
			gender,
			birthday,
			id_card,
			political,
			nation,
			department_code,
			department_id,
			department_name,
			major_code,
			major_id,
			major_name,
			class_number,
			edu,
			school_system,
			learning,
			start_date,
			current_level,
			over_date,
			status,
			description,
			region_code,
			region_name,
			exa_category,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{exaNumber},
			#{location},
			#{studentNumber},
			#{username},
			#{gender},
			#{birthday},
			#{idCard},
			#{political},
			#{nation},
			#{departmentCode},
			#{departmentId},
			#{departmentName},
			#{majorCode},
			#{majorId},
			#{majorName},
			#{classNumber},
			#{edu},
			#{schoolSystem},
			#{learning},
			#{startDate},
			#{currentLevel},
			#{overDate},
			#{status},
			#{description},
			#{regionCode},
			#{regionName},
			#{exaCategory},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE uc_student SET 	
			exa_number = #{exaNumber},
			location = #{location},
			student_number = #{studentNumber},
			username = #{username},
			gender = #{gender},
			birthday = #{birthday},
			id_card = #{idCard},
			political = #{political},
			nation = #{nation},
			department_code = #{departmentCode},
			department_id = #{departmentId},
			department_name = #{departmentName},
			major_code = #{majorCode},
			major_id = #{majorId},
			major_name = #{majorName},
			class_number = #{classNumber},
			edu = #{edu},
			school_system = #{schoolSystem},
			learning = #{learning},
			start_date = #{startDate},
			current_level = #{currentLevel},
			over_date = #{overDate},
			status = #{status},
			description = #{description},
			region_code = #{regionCode},
			region_name = #{regionName},
			exa_category = #{exaCategory},
			hokou_address = #{hokouAddress},
			home_address = #{homeAddress},
			zip_code = #{zipCode},
			addressee = #{addressee},
			notice_number = #{noticeNumber},
			phone = #{phone},
			is_change = #{isChange},
			yuwen = #{yuwen},
			shuxue = #{shuxue},
			waiyu = #{waiyu},
			zonghe = #{zonghe},
			zongfen = #{zongfen},
			techang = #{techang},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
			WHERE 1=1
			<if test="id!=null and id!=''">
			and student_number=#{studentNumber}
			</if>
			<if test="studentNumber!=null and studentNumber!=''">
			and student_number=#{studentNumber}
			</if>
			<if test="exaNumber!=null and exaNumber!=''">
				and exa_number=#{exaNumber}
			</if>
	</update>
	
	
	
	<update id="delete">
		UPDATE uc_student SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
		
	<select id="studentGroup" resultType="map">
		select  count(current_level) as TOTAL,current_level as NAME  from uc_student   group by current_level
	</select>
	
	<select id="studentSex" resultType="map">
		select  count(gender) as TOTAL,CASE WHEN gender=1 then '男' WHEN gender=2 then '女' end as NAME  from uc_student where del_flag=0 group by gender
	</select>
	
	<select id="studentRegion" resultType="map">
		select  count(gender) as TOTAL,gender as LABEL,replace(replace(region_name,'市',''),'省','') as NAME from uc_student where del_flag=0 group by gender,left(region_code,2),region_name
	</select>
	
	<select id="studentEdu" resultType="map">
		select  count(edu) as TOTAL,edu as NAME  from uc_student  where del_flag=0 group by edu
	</select>
	
	<select id="studentDepartment" resultType="map">
		select  count(department_name)  as TOTAL,department_name  as NAME  from uc_student  where del_flag=0 group by department_name
	</select>
	
	<select id="studentMajor" resultType="map">
		select  count(major_name) as TOTAL,major_name as NAME  from uc_student  where del_flag=0 group by major_name
	</select>
	
	<select id="studentUser" resultType="map">
		<![CDATA[select count(year) as TOTAL,year as LABEL from (select case when length(no)<10 then left(concat('20',no),4) else left(no,4) end as year from sys_user where user_type='99' and length(no)!=11 ) as tt group by year]]>
	</select>
	
</mapper>